Package compiler;


Helpers
	sp = ' ';												//space
  	lf = 0x000a; 											//line feed
  	cr = 0x000d;											//carriage return
  	ff = 0x000c;											//form feed
  	ht = 0x0009; 											//horizontal tab
  	line_terminator = lf | cr | cr lf;
  	white_space = (sp | ht | ff | line_terminator)*;

	all = [0 .. 0xffff];
	letter = [[’a’ .. ’z’] + [’A’ .. ’Z’]];
	digit = ['0'..'9'];
	hex = digit | ('a' | 'b' | 'c' | 'd' | 'e' | 'f');
	escapeChars = '\' ('n' | 't' | 'r' | '\' | ''' | '"' | ('x' hex hex));


Tokens

	white_space = white_space;
	line_comment = ’$’ ’$’ [[0 .. 0xffff] - [lf + cr]]* (lf | cr | lf cr);
	
	//keys
	
	and = "and";
	char = "char";
	div = "div";
	do = "do";
	else = "else";
	mod = "mod";
	not = "not";
	nothing = "nothing";
	or = "or";
	ref = "ref";
	return = "return";
	then = "then";
	var = "var";
	while = "while";	
	
	//Identifiers
	
	id = letter (letter | digit | '_')*;
	
	//Integer Numbers
	
	number = digit+;
	
	//Constant Characters
	
	conchars = ''' (letter | digit | escapeChars) '''
	
	
	//Symbolic operators
	
	plus = '+';
	minus = '-';
	mult = '*';
	div = '/';
	hash = '#';
	equal = '=';
	tags = "<>";
	less = '<';
	greater = '>';
	lesseq = "<=";
	greatereq = ">=";
	
	left_par = '('; 
	right_par = ')';

Ignored Tokens
	
	white_space;
	line_comment;
